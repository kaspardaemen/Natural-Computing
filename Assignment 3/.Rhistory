hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 50
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 300
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
n <- 3000
samp <- rnorm(n, mean=150, sd=40)
hist(samp, prob=T)
mean(samp)
sd(samp)
SE <- sd(samp)/sqrt(n)
print(paste0("confidence intervals: ",mean(samp)-(1.96*SE), " : " , mean(samp)+(1.96*SE)))
# if you prefer, instead of a histogram, include a "smoothed
# density curve"
lines(density(samp), type="l")
# overlay the TRUE Normal probability distribution
lines(20:290, dnorm(20:290, mean=150, sd=40), type="l", col="blue")
s <- [1,2]
s <- (1,2)
4+ 5
?c
list <- c(1,2)
list2 <- c(3,4)
listt <- c(list,list2)
install.packages("AUC")
?read
?read.table
x = read.table('merged.test')
data(churn)
install.packages("DescTools")
library(DescTools)
library(AUC)
library(comprehenr)
install.packages("comprehension")
install.packages("comprehenr")
library(comprehenr)
data(churn)
scores = read.table('test_results.txt')[,1]
library(DescTools)
library(AUC)
library(comprehenr)
setwd("~/GitHub/Master/Natural-Computing/Assignment 3")
scores = read.table('test_results.txt')[,1]
data(churn)
View(churn)
View(churn)
merged.test <- read.table('merged.test')[,1]
english <- read.table('english.test')[,1]
tagalog <- read.table('tagalog.test')[,1]
scores <- read.table('test_results.txt')[,1]
english <- read.table('english.test')[,1]
tagalog <- read.table('tagalog.test')[,1]
data(churn)
labels <- to_vec(for(i in 1:length(english))  0)
labels <- c(to_vec(for(i in 1:length(english))  0),  to_vec(for(i in 1:length(tagalog))  1))
view(labels)
View(labels)
labels
roc(churn$predictions, churn$labels)
auc(sensitivity(churn$predictions,churn$labels))
auc(sensitivity(scores,labels)
auc(sensitivity(scores,labels))
View(churn)
View(churn)
auc(sensitivity(scores,labels))
View(churn)
scores
auc(sensitivity(scores,labels))
auc(sensitivityy(scores,labels))
auc(sensitivity(scores,labels))
labels <- c(to_vec(for(i in 1:length(english))  0),  to_vec(for(i in 1:length(tagalog))  1))
auc(sensitivity(scores,labels))
sensitivity(scores,labels)
specificity(scores,labels)
specificity(scores,labels)
specificity(scores,labels)
data(churn)
specificity(scores,labels)
s_scores <- range01(scores)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
s_scores <- range01(scores)
s_scores
specificity(s_scores,labels)
specificity(scores,labels)
specificity(labels,scores)
?specificity
library(pROC)
library(pROC)
roc_obj <- roc(labels, scores)
View(roc_obj)
View(roc_obj)
auc(roc_obj)
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
labels=roc_obj$response,
scores=roc_obj$predictor)
auc(roc_obj)
?roc
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
labels=roc_obj$response,
scores=roc_obj$predictor)
View(roc_obj)
auc(roc_obj)
roc_obj <- roc(labels, s_scores)
auc(roc_obj)
View(roc_obj)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities))
View(roc_df)
View(roc_df)
View(roc_obj)
View(roc_obj)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
View(roc_df)
View(roc_obj)
View(roc_obj)
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
View(roc_obj)
View(roc_obj)
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
auc(roc_obj)
install.packages("comprehenr")
library(DescTools)
library(pROC)
library(comprehenr)
get_auc <- function(scores, labels) {
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
print(auc(roc_obj))
return <- roc_df
}
scores <- read.table('test_results.txt')[,1]
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
english <- read.table('english.test')[,1]
tagalog <- read.table('tagalog.test')[,1]
labels <- c(to_vec(for(i in 1:length(english))  0),  to_vec(for(i in 1:length(tagalog))  1))
roc_df <- get_auc(scores, labels)
library(DescTools)
library(pROC)
library(comprehenr)
get_auc <- function(scores, labels) {
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
print(auc(roc_obj))
return <- roc_df
}
scores <- read.table('test_results.txt')[,1]
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
english <- read.table('english.test')[,1]
tagalog <- read.table('tagalog.test')[,1]
labels <- c(to_vec(for(i in 1:length(english))  0),  to_vec(for(i in 1:length(tagalog))  1))
roc_df <- get_auc(scores, labels)
library(DescTools)
library(pROC)
library(comprehenr)
get_auc <- function(scores, labels) {
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
print(auc(roc_obj))
return <- roc_df
}
scores <- read.table('test_results.txt')[,1]
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
english <- read.table('english.test')[,1]
tagalog <- read.table('tagalog.test')[,1]
labels <- c(to_vec(for(i in 1:length(english))  0),  to_vec(for(i in 1:length(tagalog))  1))
roc_df <- get_auc(scores, labels)
View(roc_df)
View(roc_df)
system('ls')
shell('ls')
shell('dir')
#install.packages("comprehenr")
library(DescTools)
library(pROC)
library(comprehenr)
txt <- readLines("syscalls/snd-cert/snd-cert.1.labels")
labels <- readLines("syscalls/snd-cert/snd-cert.1.labels")
train <- readLines("syscalls/snd-cert/snd-cert.train")
chunks <- chunk(train[0], 10)
<-
chunk <- function(x,n) split(x, factor(sort(rank(x)%%n)))
chunks <- chunk(train[0], 10)
View(chunks)
View(chunks)
chunks <- chunk(train[1], 10)
View(chunks)
View(chunks)
train[1]
train
train[2]
chunks <- chunk(train[2], 10)
preprocess_data <- function (data, chunk_size) {
data <- list()
for(i in 1:length(file.names)){
datatmp <- read.csv(file.names[i], sep=";", stringsAsFactors=FALSE)
listtmp = datatmp[, 6]
mylist <- append(mylist, list(listtmp))
}
}
View(chunks)
View(chunks)
View(chunks)
View(chunks)
View(chunks)
View(chunks)
train[2]
chunks <- chunk(c(1,2,3,4), 10)
View(chunks)
View(chunks)
chunks[0]
chunks <- chunk(c(1,2,3,4), 2)
chunks
chunks <- chunk(str(train[2]), 2)
chunk <- function(x,n) split(x, factor(sort(rank(x)%%n)))
chunks <- chunk(to_vec((train[2])), 2)
to_vec(train[2])
chunker <- function(line, chunklength){
n <- chunklength
chunks <- substring(line,                     # Apply substring function
seq(1, nchar(line), n),
seq(n, nchar(line), n))
return(chunks)
}
chunker(train[2], 10)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(DescTools)
library(pROC)
library(comprehenr)
library(ggplot2)
get_auc <- function(scores, labels) {
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
print(auc(roc_obj))
ggplot(roc_df, aes(tpr, fpr, colour = class)) +
geom_point()
return <- roc_df
}
scores <- read.table('test_results.txt')[,1]
english <- read.table('english.test')[,1]
tagalog <- read.table('tagalog.test')[,1]
labels <- c(to_vec(for(i in 1:length(english))  0),  to_vec(for(i in 1:length(tagalog))  1))
roc_df <- get_auc(scores, labels)
install.packages("ggplot2")
library(DescTools)
library(pROC)
library(comprehenr)
library(ggplot2)
get_auc <- function(scores, labels) {
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
print(auc(roc_obj))
ggplot(roc_df, aes(tpr, fpr, colour = class)) +
geom_point()
return <- roc_df
}
scores <- read.table('test_results.txt')[,1]
english <- read.table('english.test')[,1]
tagalog <- read.table('tagalog.test')[,1]
labels <- c(to_vec(for(i in 1:length(english))  0),  to_vec(for(i in 1:length(tagalog))  1))
roc_df <- get_auc(scores, labels)
ggplot(roc_df, aes(tpr, fpr, colour = class)) +
geom_point()
ggplot(roc_df, aes(tpr, fpr, colour = class)) +
geom_point()
ggplot(roc_df, aes(TPR, FPR, colour = class)) +
geom_point()
ggplot(roc_df, aes(TPR, FPR)) +
geom_point()
roc_df <- get_auc(scores, labels)
ggplot(roc_df, aes(FPR, TPR)) +
geom_point()
ggplot(roc_df, aes(FPR, TPR)) +
geom_path()
library(DescTools)
library(pROC)
library(comprehenr)
library(ggplot2)
get_auc <- function(scores, labels) {
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
print(auc(roc_obj))
ggplot(roc_df, aes(FPR, TPR)) +
geom_path()
return <- roc_df
}
scores <- read.table('test_results.txt')[,1]
english <- read.table('english.test')[,1]
tagalog <- read.table('tagalog.test')[,1]
labels <- c(to_vec(for(i in 1:length(english))  0),  to_vec(for(i in 1:length(tagalog))  1))
roc_df <- get_auc(scores, labels)
roc_df <- get_auc(scores, labels)
get_auc <- function(scores, labels) {
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
print(auc(roc_obj))
ggplot(roc_df, aes(FPR, TPR)) +
geom_path()
return <- roc_df
}
roc_df <- get_auc(scores, labels)
ggplot(roc_df, aes(FPR, TPR)) +
geom_path()
library(DescTools)
library(pROC)
library(comprehenr)
library(ggplot2)
get_auc <- function(scores, labels) {
roc_obj <- roc(labels, scores)
roc_df <- data.frame(
TPR=rev(roc_obj$sensitivities),
FPR=rev(1 - roc_obj$specificities),
thresholds=rev(roc_obj$thresholds))
print(auc(roc_obj))
return <- roc_df
}
scores <- read.table('test_results.txt')[,1]
english <- read.table('english.test')[,1]
tagalog <- read.table('tagalog.test')[,1]
labels <- c(to_vec(for(i in 1:length(english))  0),  to_vec(for(i in 1:length(tagalog))  1))
roc_df <- get_auc(scores, labels)
ggplot(roc_df, aes(FPR, TPR)) +
geom_path()
ggplot(roc_df, aes(FPR, TPR)) +
geom_path() + labs(title'ROC curve')
ggplot(roc_df, aes(FPR, TPR)) +
geom_path() + labs(title'ROC curve')
ggplot(roc_df, aes(FPR, TPR)) +
geom_path() + labs(title'ROC curve')
roc_df <- get_auc(scores, labels)
ggplot(roc_df, aes(FPR, TPR)) +
geom_path() + labs(title='ROC curve')
